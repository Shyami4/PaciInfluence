----------------------------------------------------------------------------
------Extracting the big dataset from transfers Table
-- NUM_UNIQUE_RECIPIENTS > 2 Sender has transferred to 3+ unique recipients
-- TRANSFERS_2023 > 0 AND TRANSFERS_2024 > 0	Sender is recently active
-- All transfers per year < 30	Filters out likely brokers or institutional senders
------------------------------------------------------------------------------
WITH sender_transfer_summary AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACTIVITY_CODE NOT LIKE 'C'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)

SELECT DISTINCT(A.DIM_ACCOUNT_KEY) AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
A.PREFERRED_EMAIL,
D.TYPE_NAME:en_US::STRING,
A.ORGANIZATION_ID, 
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
B.DIM_ACCOUNT_KEY AS RECEPIENT_DIM_ACCOUNT_KEY, 
B.NAME AS RECEPIENT_NAME,
D.EMAILS,
C.TICKET_BILLING_ZIP,
-- Aggregated transactional metadata
LISTAGG(DISTINCT A.SEASON_CODE, ', ') WITHIN GROUP (ORDER BY A.SEASON_CODE) AS SEASONS_SENT,
LISTAGG(DISTINCT A.SEASON_NAME, ', ') WITHIN GROUP (ORDER BY A.SEASON_NAME) AS SEASONS_SENT_NAME,
LISTAGG(DISTINCT A.ACTIVITY_CODE, ', ') WITHIN GROUP (ORDER BY A.ACTIVITY_CODE) AS ACTIVITIES,
LISTAGG(DISTINCT A.PRTYPE_CODE, ', ') WITHIN GROUP (ORDER BY A.PRTYPE_CODE) AS PRTYPE_CODE,
LISTAGG(DISTINCT A.PRTYPE_NAME, ', ') WITHIN GROUP (ORDER BY A.PRTYPE_NAME) AS PRTYPE_NAME,
LISTAGG(DISTINCT A.SEATBLOCK, ', ') WITHIN GROUP (ORDER BY A.SEATBLOCK) AS SEATBLOCKS,
-- Transfers per year
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN A.TRANSFER_KEY END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN A.TRANSFER_KEY END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN A.TRANSFER_KEY END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN A.TRANSFER_KEY END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN A.TRANSFER_KEY END) AS TRANSFERS_2024,
-- Ranking recipient per sender by transfer volume
RANK() OVER (
PARTITION BY A.DIM_ACCOUNT_KEY
ORDER BY COUNT(A.TRANSFER_KEY) DESC
) AS TRANSFER_RANK_PER_SENDER

FROM infomart_ext.fact_ticket_transfer A 
JOIN sender_transfer_summary ST
ON A.DIM_ACCOUNT_KEY = ST.SENDER_DIM_ACCOUNT_KEY
LEFT JOIN  infomart.DIM_ACCOUNT B
ON A.RECEP_ACCOUNT_ID = B.ACCOUNT_ID
AND A.ORGANIZATION_ID = B.ORGANIZATION_ID
LEFT JOIN INFOMART_EXT.DIM_ACCOUNT_CONTACT_ADDRESS C
ON A.DIM_ACCOUNT_KEY = C.DIM_ACCOUNT_KEY
LEFT JOIN  infomart.DIM_ACCOUNT D
ON A.DIM_ACCOUNT_KEY = D.DIM_ACCOUNT_KEY

WHERE A.ORGANIZATION_ID IN ('WISCONSIN')
AND YEAR(SEND_DATETIME) >=2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'    -- removes Commencement
AND A.ACTIVITY_CODE NOT LIKE 'C'
AND (SENDER_NAME LIKE '% %' AND SENDER_NAME NOT LIKE '% % %'
OR SENDER_NAME REGEXP '[0-9]'          -- remove names with digits  
OR SENDER_NAME LIKE '%@%')             -- remove email-like names
-- OR SENDER_NAME LIKE '%-%'           -- remove hyphenated codes or keys
-- OR SENDER_NAME LIKE '%_%'           -- remove underscores
-- OR SENDER_NAME LIKE '%/%'

GROUP BY 
A.DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME,
A.PREFERRED_EMAIL,
D.TYPE_NAME,
A.ORGANIZATION_ID,
D.EMAILS,
C.TICKET_BILLING_ZIP,
RECEPIENT_DIM_ACCOUNT_KEY,
RECEPIENT_NAME

ORDER BY SENDER_NAME, TRANSFER_RANK_PER_SENDER;

--------------------------------------------------------
-- Activity List
--------------------------------------------------------
select distinct(activity_id), name
from infomart.dim_tk_activity
where organization_id = 'WISCONSIN'
order by activity_id;
----------------------------------------------------------------
//Creating the Nodes file using a temporary table and getting their Zipcodes
----------------------------------------------------------------
CREATE TEMPORARY TABLE nodes (id VARCHAR(32));
INSERT INTO nodes (id)
(SELECT DISTINCT A.DIM_ACCOUNT_KEY
FROM infomart_ext.fact_ticket_transfer A 
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY);



INSERT INTO nodes (id)
SELECT DISTINCT 
B.DIM_ACCOUNT_KEY
FROM infomart_ext.fact_ticket_transfer A 
LEFT JOIN  infomart.DIM_ACCOUNT B
ON A.RECEP_ACCOUNT_ID = B.ACCOUNT_ID
AND A.ORGANIZATION_ID = B.ORGANIZATION_ID
WHERE A.DIM_ACCOUNT_KEY IN (SELECT DISTINCT id from nodes)

SELECT DISTINCT n.id , C.LIFETIME_DONATION_AMOUNT, C.YEARS_OF_DONATING, C.GREATEST_GIFT_AMOUNT
from nodes n
LEFT JOIN INFOMART.DIM_DONOR C
ON n.id = C.DIM_ACCOUNT_KEY

SELECT DISTINCT id from nodes;

SELECT DISTINCT n.id , C.TICKET_BILLING_ZIP as ZIP_CODE
from nodes n
LEFT JOIN INFOMART_EXT.DIM_ACCOUNT_CONTACT_ADDRESS C
ON n.id = C.DIM_ACCOUNT_KEY


SELECT * FROM INFOMART_EXT.DIM_ACCOUNT_CONTACT_ADDRESS
WHERE dim_account_key = '9e99279e0358578be36cf845fd2e417a'


SELECT DISTINCT 
n.id,
c.BIRTH_DATE,
FLOOR(DATEDIFF('day', c.BIRTH_DATE, CURRENT_DATE) / 365.25) AS AGE
FROM nodes n
LEFT JOIN infomart.dim_contact c 
ON n.id = c.dim_account_key;


SELECT 
  BIRTH_DATE,
  FLOOR(DATEDIFF('day', BIRTH_DATE, CURRENT_DATE) / 365.25) AS AGE
FROM your_table_name;
----------------------------------------------------------------------------------------
-- Looking to see if the senders from tansfers table have any donation activity (for USC)
----------------------------------------------------------------------------------------
WITH qualified_senders AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)

SELECT 
qs.SENDER_DIM_ACCOUNT_KEY,
qs.SENDER_NAME,
COALESCE(MAX(d.GREATEST_GIFT_AMOUNT), 0) AS MAX_GREATEST_GIFT_AMOUNT,
COALESCE(MAX(d.LIFETIME_DONATION_AMOUNT), 0) AS MAX_LIFETIME_DONATION_AMOUNT,
COALESCE(AVG(d.LIFETIME_DONATION_AMOUNT), 0) AS AVG_LIFETIME_DONATION_AMOUNT,
d.first_date,
d.last_date,
d.years_of_donating,
d.memberships,
d.donor_status,
d.is_deleted,
d.sys_status
FROM qualified_senders qs
LEFT JOIN INFOMART.DIM_DONOR d
ON qs.SENDER_DIM_ACCOUNT_KEY = d.DIM_ACCOUNT_KEY
GROUP BY 
qs.SENDER_DIM_ACCOUNT_KEY,
qs.SENDER_NAME,
d.first_date,
d.last_date,
d.years_of_donating,
d.memberships,
d.donor_status,
d.is_deleted,
d.sys_status
ORDER BY 
qs.SENDER_DIM_ACCOUNT_KEY;

-----------------------------------------------------------------------------------
-- Select the click through rate
-----------------------------------------------------------------------------------
WITH qualified_senders AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
A.PREFERRED_EMAIL AS SENDER_EMAIL,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME, A.PREFERRED_EMAIL 
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)

SELECT 
qs.SENDER_DIM_ACCOUNT_KEY,
qs.SENDER_EMAIL,
qs.SENDER_NAME,
COUNT(e.emailaddress) AS total_clickthroughs
FROM qualified_senders qs
LEFT JOIN ELOQUA_LAKE.ALL_CLIENTS.VW_ACTIVITY_EMAILCLICKTHROUGH_ALL e
ON qs.SENDER_EMAIL = e.emailaddress
GROUP BY
qs.SENDER_DIM_ACCOUNT_KEY,
qs.SENDER_EMAIL,
qs.SENDER_NAME
ORDER BY qs.SENDER_NAME;

-------------------------------------------------------------------------------------
-- Web activity
-------------------------------------------------------------------------------------
WITH qualified_senders AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
A.PREFERRED_EMAIL AS SENDER_EMAIL,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME, A.PREFERRED_EMAIL 
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)

select c.emailaddress, qs.SENDER_DIM_ACCOUNT_KEY,
-- Webvisit counts per year
COUNT(CASE WHEN YEAR(w.createdat) = 2020 THEN w.id END) AS WEBVISIT_2020,
COUNT(CASE WHEN YEAR(w.createdat) = 2021 THEN w.id END) AS WEBVISIT_2021,
COUNT(CASE WHEN YEAR(w.createdat) = 2022 THEN w.id END) AS WEBVISIT_2022,
COUNT(CASE WHEN YEAR(w.createdat) = 2023 THEN w.id END) AS WEBVISIT_2023,
COUNT(CASE WHEN YEAR(w.createdat) = 2024 THEN w.id END) AS WEBVISIT_2024
from 
eloqua_lake.all_clients.vw_activity_webvisit_all w
join eloqua_lake.all_clients.vw_contact_all  c
on c.id = w.contactid and c.organization_id = w.organization_id
right join qualified_senders qs
on c.emailaddress = qs.SENDER_EMAIL
group by qs.SENDER_DIM_ACCOUNT_KEY, c.emailaddress


--------------------------------------------------------------------------------
-- Activity attended or not in 2024 , 2023
--------------------------------------------------------------------------------
WITH qualified_senders AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
A.PREFERRED_EMAIL AS SENDER_EMAIL,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME, A.PREFERRED_EMAIL 
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)
 
SELECT DISTINCT(A.DIM_ACCOUNT_KEY),
A.ACTIVITY_CODE,
A.ACCOUNT_NAME,
COUNT (A.activity_code) AS ACTIVITY_COUNT,
CASE
    WHEN COUNT(A.TRANSFER_KEY) > 0
    THEN 1 ELSE 0
END AS TRANSFERRED_IN_2024
FROM infomart_ext.fact_ticket_transfer A 
JOIN qualified_senders qs
ON A.DIM_ACCOUNT_KEY = qs.SENDER_DIM_ACCOUNT_KEY
WHERE YEAR(A.SEND_DATETIME) = 2024
AND A.ORGANIZATION_ID = 'WISCONSIN'
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME, A.ACTIVITY_CODE
ORDER BY A.ACCOUNT_NAME

------------------------------------------------------------------------------
-- Monthly activity wise transfer data since 2020
------------------------------------------------------------------------------
WITH qualified_senders AS (
SELECT
A.DIM_ACCOUNT_KEY AS SENDER_DIM_ACCOUNT_KEY,
A.ACCOUNT_NAME AS SENDER_NAME,
A.PREFERRED_EMAIL AS SENDER_EMAIL,
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) AS NUM_UNIQUE_RECIPIENTS,
COUNT(A.TRANSFER_KEY) AS TOTAL_TRANSFERS,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) AS TRANSFERS_2020,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) AS TRANSFERS_2021,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) AS TRANSFERS_2022,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) AS TRANSFERS_2023,
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) AS TRANSFERS_2024
FROM infomart_ext.fact_ticket_transfer A
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
AND A.ACCOUNT_NAME LIKE '% %' AND A.ACCOUNT_NAME NOT LIKE '% % %'
GROUP BY A.DIM_ACCOUNT_KEY, A.ACCOUNT_NAME, A.PREFERRED_EMAIL 
HAVING 
COUNT(DISTINCT A.RECEP_ACCOUNT_ID) > 2 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) > 0 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2020 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2021 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2022 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2023 THEN 1 END) < 30 AND
COUNT(CASE WHEN YEAR(A.SEND_DATETIME) = 2024 THEN 1 END) < 30
ORDER BY A.DIM_ACCOUNT_KEY
)

SELECT YEAR(A.SEND_DATETIME) AS TRANSFER_YEAR,
MONTH(A.SEND_DATETIME) AS TRANSFER_MONTH,
COUNT(*) AS TOTAL_TRANSFERS,
A.ACTIVITY_CODE
FROM infomart_ext.fact_ticket_transfer A
JOIN qualified_senders QS
ON A.DIM_ACCOUNT_KEY = qs.SENDER_DIM_ACCOUNT_KEY
WHERE A.ORGANIZATION_ID = 'WISCONSIN'
AND YEAR(A.SEND_DATETIME) >= 2020
AND ATTENDED = 'Y'
AND A.SEASON_CODE NOT LIKE '%COMM%'
GROUP BY TRANSFER_YEAR, TRANSFER_MONTH, ACTIVITY_CODE
ORDER BY TRANSFER_YEAR, TRANSFER_MONTH;